#include <GL/gl.h>
#include <GL/glu.h>
#include <GL/glut.h>
#include<math.h>
#include <stdlib.h>
#include <windows.h>

void display();
void reshape(int w,int h);

void init(){
    glClearColor(0.0,0.0,0.0,1.0);
}

int main(int argc,char**argv)
{
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_RGB);

    glutInitWindowPosition(200,200);
    glutInitWindowSize(500,500);

    glutCreateWindow("Window 2");

    glutDisplayFunc(display);
    glutReshapeFunc(reshape);
    init();

    glutMainLoop();
}

void display()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glLoadIdentity();

    glLineWidth(10.0);


    /*
    glBegin(GL_LINE_STRIP);
    //drawing a star folded shape
    glVertex2f(1,1);
    glVertex2f(7,5);
    glVertex2f(3,6);
    glVertex2f(9,9);
    */
    /*
    //code to draw un completed circle
    glVertex2f(5,5);
    glVertex2f(5,8);
    glVertex2f(2,8);
    glVertex2f(2,5);
    */

    //code to draw a circle
/*
    glLineWidth(2);
    glBegin(GL_LINE_LOOP);
    glColor3f(1,0,1);

    for (int i =0; i<360; i++)
        {
        double angle = i* (3.14/180);

        glVertex2d(8*cos(angle), 8*sin(angle));
        }
     */


     /*
     //code to draw an oval
     glLineWidth(2);
    glBegin(GL_LINE_LOOP);
    glColor3f(1,0,1);

    for (int i =0; i<360; i++)
        {
        double angle = i* (3.14/180);

        glVertex2d(4*cos(angle), 8*sin(angle));
        }
        */


    /*
     // code to draw a rectangle
     glRecti(x1,y1,x2,y2);
     */

    glEnd();

    glFlush();
}

void reshape(int w,int h){
    glViewport(0,0,(GLsizei)w,(GLsizei)h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-10,10,-10,10); //x -ve  y-ve   x+ve  y+ve
    glMatrixMode(GL_MODELVIEW);
}

